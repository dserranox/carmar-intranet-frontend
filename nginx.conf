user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Security & performance
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    server_tokens   off;

    # Gzip
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript application/xml+rss application/atom+xml application/xml image/svg+xml;

    # Caching for static assets
    map $sent_http_content_type $cache_control {
        default                     "no-cache";
        "~*text/html"               "no-cache";
        "~*application/json"        "no-cache";
        "~*application/javascript"  "public, max-age=31536000, immutable";
        "~*text/css"                "public, max-age=31536000, immutable";
        "~*image/"                  "public, max-age=31536000, immutable";
        "~*font/"                   "public, max-age=31536000, immutable";
        "~*svg"                     "public, max-age=31536000, immutable";
    }

    server {
        listen 8080;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        # Basic security headers (tune CSP per app)
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Cross-Origin-Opener-Policy same-origin always;
        add_header Cross-Origin-Resource-Policy same-site always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # If you later add CSP, ensure hashes/nonces for inline scripts/styles
        # add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; frame-ancestors 'self'; base-uri 'self';" always;

        # Serve asset files with cache-control determined above
        location ~* \.(?:js|mjs|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
            try_files $uri =404;
            add_header Cache-Control $cache_control always;
        }

        # SPA fallback: anything not a real file -> index.html
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache" always;
        }

        # Healthcheck
        location = /healthz {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "ok\n";
        }
    }
}
